[{"id":0,"href":"/2024election-blog/post/2024-09-09-week-1-past-presidential-elections/","title":"Week 1: Past Presidential Elections","section":"Posts","content":" Week 1: Past Presidential Elections # Monday, September 9, 2024 56 Days Until Presidential Election\n#\u0026#39; @title GOV 1347: Introductory Blog Post/Laboratory Session #\u0026#39; @author Sammy Duggasani #\u0026#39; @date August 29, 2024 ####----------------------------------------------------------# #### Preamble ####----------------------------------------------------------# # Load libraries. ## install via `install.packages(\u0026#34;name\u0026#34;)` library(ggplot2) library(maps) library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10 ## ✔ tidyr 1.2.1 ✔ stringr 1.5.1 ## ✔ readr 2.1.3 ✔ forcats 0.5.2 ## ✔ purrr 0.3.5 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ✖ purrr::map() masks maps::map() library(ggrepel) library(leaflet) library(dplyr) library(sf) ## Linking to GEOS 3.10.2, GDAL 3.4.2, PROJ 8.2.1; sf_use_s2() is TRUE library(htmlwidgets) ## set working directory here setwd(\u0026#34;/Users/sammy/Documents/Harvard/Senior_Year/GOV1347/Election Blog/content/post/2024-09-08-week-1-past-presidential-elections\u0026#34;) ####----------------------------------------------------------# #### Read and clean presidential popular vote. ####----------------------------------------------------------# # Read presidential popular vote. d_popvote \u0026lt;- read_csv(\u0026#34;popvote_1948-2020.csv\u0026#34;) ## Rows: 38 Columns: 9 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \u0026quot;,\u0026quot; ## chr (2): party, candidate ## dbl (3): year, pv, pv2p ## lgl (4): winner, incumbent, incumbent_party, prev_admin ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # Subset data to most recent past election year. d_popvote |\u0026gt; filter(year == 2020) |\u0026gt; select(party, candidate, pv2p) ## # A tibble: 2 × 3 ## party candidate pv2p ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; ## 1 democrat Biden, Joseph R. 52.3 ## 2 republican Trump, Donald J. 47.7 # Pivot data to wide format with party names as columns and two-party vote share as values. (d_popvote_wide \u0026lt;- d_popvote |\u0026gt; select(year, party, pv2p) |\u0026gt; pivot_wider(names_from = party, values_from = pv2p)) ## # A tibble: 19 × 3 ## year democrat republican ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 1948 52.3 47.7 ## 2 1952 44.7 55.3 ## 3 1956 42.2 57.8 ## 4 1960 50.1 49.9 ## 5 1964 61.3 38.7 ## 6 1968 49.6 50.4 ## 7 1972 38.2 61.8 ## 8 1976 51.1 48.9 ## 9 1980 44.8 55.2 ## 10 1984 40.9 59.1 ## 11 1988 46.2 53.8 ## 12 1992 53.6 46.4 ## 13 1996 54.8 45.2 ## 14 2000 50.3 49.7 ## 15 2004 48.7 51.3 ## 16 2008 53.8 46.2 ## 17 2012 51.9 48.1 ## 18 2016 51.2 48.8 ## 19 2020 52.3 47.7 # Modify winner column to show \u0026#34;D\u0026#34; if Democrats win and \u0026#34;R\u0026#34; if Republicans win. (d_popvote_wide \u0026lt;- d_popvote_wide |\u0026gt; mutate(winner = case_when(democrat \u0026gt; republican ~ \u0026#34;D\u0026#34;, TRUE ~ \u0026#34;R\u0026#34;))) ## # A tibble: 19 × 4 ## year democrat republican winner ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 1948 52.3 47.7 D ## 2 1952 44.7 55.3 R ## 3 1956 42.2 57.8 R ## 4 1960 50.1 49.9 D ## 5 1964 61.3 38.7 D ## 6 1968 49.6 50.4 R ## 7 1972 38.2 61.8 R ## 8 1976 51.1 48.9 D ## 9 1980 44.8 55.2 R ## 10 1984 40.9 59.1 R ## 11 1988 46.2 53.8 R ## 12 1992 53.6 46.4 D ## 13 1996 54.8 45.2 D ## 14 2000 50.3 49.7 D ## 15 2004 48.7 51.3 R ## 16 2008 53.8 46.2 D ## 17 2012 51.9 48.1 D ## 18 2016 51.2 48.8 D ## 19 2020 52.3 47.7 D # Summarize data with respect to winners. d_popvote_wide |\u0026gt; group_by(winner) |\u0026gt; summarise(races = n()) ## # A tibble: 2 × 2 ## winner races ## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; ## 1 D 11 ## 2 R 8 # custom ggplot theme my_prettier_theme \u0026lt;- function() { theme( # no border panel.border = element_blank(), # background panel.background = element_rect(fill = \u0026#34;snow2\u0026#34;), # text plot.title = element_text(size = 15, hjust = .5, face = \u0026#34;bold\u0026#34;, family = \u0026#34;Georgia\u0026#34;), plot.subtitle = element_text(size = 13, hjust = .5, family = \u0026#34;Georgia\u0026#34;), plot.title.position = \u0026#34;panel\u0026#34;, axis.text.x = element_text(size = 8, angle = 45, hjust = .5, family = \u0026#34;Georgia\u0026#34;), axis.text.y = element_text(size = 8, family = \u0026#34;Georgia\u0026#34;), axis.title.x = element_text(family = \u0026#34;Georgia\u0026#34;), axis.title.y = element_text(angle = 90, family = \u0026#34;Georgia\u0026#34;), axis.ticks = element_line(colour = \u0026#34;black\u0026#34;), axis.line = element_line(colour = \u0026#34;grey\u0026#34;), # legend legend.position = \u0026#34;right\u0026#34;, legend.title = element_text(size = 12, family = \u0026#34;Georgia\u0026#34;), legend.text = element_text(size = 10, family = \u0026#34;Georgia\u0026#34;), # aspect ratio aspect.ratio = .8 ) } ####----------------------------------------------------------# #### Visualize trends in national presidential popular vote. ####----------------------------------------------------------# # Visualize the two-party presidential popular over time. two_party_visualization \u0026lt;- d_popvote |\u0026gt; ggplot(mapping = aes(x = year, y = pv2p, color = party)) + geom_line() + geom_point() + scale_color_manual(\u0026#34;Party\u0026#34;, values = c(\u0026#34;steelblue3\u0026#34;, \u0026#34;tomato3\u0026#34;)) + labs(title = \u0026#34;Two Party Presidential Popular Over Time\u0026#34;, subtitle = \u0026#34;1948-2020\u0026#34;, x = \u0026#34;Year\u0026#34;, y = \u0026#34;Winning Popular Vote Share\u0026#34;) + my_prettier_theme() two_party_visualization ggsave (\u0026#34;figures/two_party_vis.png\u0026#34;) ## Saving 7 x 5 in image ####----------------------------------------------------------# #### State-by-state map of presidential popular votes. ####----------------------------------------------------------# # Sequester shapefile of states from `maps` library. states_map \u0026lt;- map_data(\u0026#34;state\u0026#34;) unique(states_map$region) ## [1] \u0026quot;alabama\u0026quot; \u0026quot;arizona\u0026quot; \u0026quot;arkansas\u0026quot; ## [4] \u0026quot;california\u0026quot; \u0026quot;colorado\u0026quot; \u0026quot;connecticut\u0026quot; ## [7] \u0026quot;delaware\u0026quot; \u0026quot;district of columbia\u0026quot; \u0026quot;florida\u0026quot; ## [10] \u0026quot;georgia\u0026quot; \u0026quot;idaho\u0026quot; \u0026quot;illinois\u0026quot; ## [13] \u0026quot;indiana\u0026quot; \u0026quot;iowa\u0026quot; \u0026quot;kansas\u0026quot; ## [16] \u0026quot;kentucky\u0026quot; \u0026quot;louisiana\u0026quot; \u0026quot;maine\u0026quot; ## [19] \u0026quot;maryland\u0026quot; \u0026quot;massachusetts\u0026quot; \u0026quot;michigan\u0026quot; ## [22] \u0026quot;minnesota\u0026quot; \u0026quot;mississippi\u0026quot; \u0026quot;missouri\u0026quot; ## [25] \u0026quot;montana\u0026quot; \u0026quot;nebraska\u0026quot; \u0026quot;nevada\u0026quot; ## [28] \u0026quot;new hampshire\u0026quot; \u0026quot;new jersey\u0026quot; \u0026quot;new mexico\u0026quot; ## [31] \u0026quot;new york\u0026quot; \u0026quot;north carolina\u0026quot; \u0026quot;north dakota\u0026quot; ## [34] \u0026quot;ohio\u0026quot; \u0026quot;oklahoma\u0026quot; \u0026quot;oregon\u0026quot; ## [37] \u0026quot;pennsylvania\u0026quot; \u0026quot;rhode island\u0026quot; \u0026quot;south carolina\u0026quot; ## [40] \u0026quot;south dakota\u0026quot; \u0026quot;tennessee\u0026quot; \u0026quot;texas\u0026quot; ## [43] \u0026quot;utah\u0026quot; \u0026quot;vermont\u0026quot; \u0026quot;virginia\u0026quot; ## [46] \u0026quot;washington\u0026quot; \u0026quot;west virginia\u0026quot; \u0026quot;wisconsin\u0026quot; ## [49] \u0026quot;wyoming\u0026quot; # Read wide version of dataset that can be used to compare candidate votes with one another. d_pvstate_wide \u0026lt;- read_csv(\u0026#34;clean_wide_state_2pv_1948_2020.csv\u0026#34;) ## Rows: 959 Columns: 14 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \u0026quot;,\u0026quot; ## chr (1): state ## dbl (13): year, D_pv, R_pv, D_pv2p, R_pv2p, D_pv_lag1, R_pv_lag1, D_pv2p_lag... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. # Merge d_pvstate_wide with state_map. d_pvstate_wide$region \u0026lt;- tolower(d_pvstate_wide$state) pv_map \u0026lt;- d_pvstate_wide |\u0026gt; filter(year == 2020) |\u0026gt; left_join(states_map, by = \u0026#34;region\u0026#34;) # Make map grid of state winners for each election year available in the dataset. pv_win_map \u0026lt;- pv_map |\u0026gt; mutate(winner = ifelse(R_pv \u0026gt; D_pv, \u0026#34;republican\u0026#34;, \u0026#34;democrat\u0026#34;)) pv_win_map |\u0026gt; ggplot(aes(long, lat, group = group)) + geom_polygon(aes(fill = winner), color = \u0026#34;black\u0026#34;) + scale_fill_manual(values = c(\u0026#34;steelblue\u0026#34;, \u0026#34;tomato3\u0026#34;)) + theme_void() + labs(title = \u0026#34;Map Grid of State Winners\u0026#34;, subtitle = \u0026#34;2020 Election\u0026#34;) + my_prettier_theme() + theme(axis.title.x= element_blank(), axis.title.y= element_blank(), axis.text.x= element_blank(), axis.text.y= element_blank(), axis.ticks = element_blank(), axis.line= element_blank()) ggsave (\u0026#34;figures/PV_win_map.png\u0026#34;) ## Saving 7 x 5 in image d_pvstate_wide |\u0026gt; filter(year \u0026gt;= 1980) |\u0026gt; left_join(states_map, by = \u0026#34;region\u0026#34;) |\u0026gt; mutate(winner = ifelse(R_pv2p\u0026gt;D_pv2p, \u0026#34;republican\u0026#34;, \u0026#34;democrat\u0026#34;)) |\u0026gt; ggplot(aes(long, lat, group = group)) + facet_wrap(facets = year ~.) + geom_polygon(aes(fill = winner), color = \u0026#34;white\u0026#34;)+ scale_fill_manual(values = c(\u0026#34;steelblue\u0026#34;, \u0026#34;tomato3\u0026#34;)) + labs(title = \u0026#34;Presidential Vote Share by State\u0026#34;, subtitle = \u0026#34;1980-2020\u0026#34;) + theme(strip.text = element_text(size = 12), aspect.ratio = 1) + my_prettier_theme() + theme(axis.title.x= element_blank(), axis.title.y= element_blank(), axis.text.x= element_blank(), axis.text.y= element_blank(), axis.ticks = element_blank(), axis.line= element_blank()) ggsave (\u0026#34;figures/PV_states_historical.png\u0026#34;) ## Saving 7 x 5 in image ####----------------------------------------------------------# #### Forecast: simplified electoral cycle model. ####----------------------------------------------------------# # Create prediction (pv2p and margin) based on simplified electoral cycle model: # vote_2024 = 3/4*vote_2020 + 1/4*vote_2016 (lag1, lag2, respectively). pv2p_2024_states \u0026lt;- d_pvstate_wide |\u0026gt; filter(year == 2020) |\u0026gt; group_by(state)|\u0026gt; summarize(R_pv2p_2024 = .75*R_pv2p + .25*R_pv2p_lag1, D_pv2p_2024 = .75*D_pv2p + .25*D_pv2p_lag1) |\u0026gt; mutate(pv2p_2024_margin = R_pv2p_2024 - D_pv2p_2024, winner = ifelse(R_pv2p_2024 \u0026gt; D_pv2p_2024, \u0026#34;R\u0026#34;, \u0026#34;D\u0026#34;), region = tolower(state)) pv2p_2024_states_2 \u0026lt;- pv2p_2024_states # Plot the margin of victory in a U.S. state map. states_map \u0026lt;- map_data(\u0026#34;state\u0026#34;) state_mapa \u0026lt;- pv2p_2024_states |\u0026gt; left_join(states_map, by = \u0026#34;region\u0026#34;) state_centers \u0026lt;- data.frame(state.center, state.abb, state.name) state_mapa \u0026lt;- state_mapa |\u0026gt; ggplot(aes(long, lat, group = group)) + geom_polygon(aes(fill = pv2p_2024_margin), color = \u0026#34;black\u0026#34;)+ scale_fill_gradient2(high = \u0026#34;tomato3\u0026#34;, low = \u0026#34;steelblue3\u0026#34;, mid = \u0026#34;white\u0026#34;, name = \u0026#34;Two-Party Win Margin\u0026#34;, breaks = c(-50, -25, 0, 25, 50), limits = c(-50,50)) + labs(title = \u0026#34;2024 Presidential Forecast\u0026#34;, subtitle = \u0026#34;Simplified Electoral Cycle Model\u0026#34;) + my_prettier_theme() + theme(axis.title.x= element_blank(), axis.title.y= element_blank(), axis.text.x= element_blank(), axis.text.y= element_blank(), axis.ticks = element_blank(), axis.line= element_blank()) state_mapa ggsave(\u0026#34;figures/PV2024_simple_forecast.png\u0026#34;) ## Saving 7 x 5 in image ####----------------------------------------------------------# #### Extension 1: Add state labels ####----------------------------------------------------------# # Load US map data states_map \u0026lt;- map_data(\u0026#34;state\u0026#34;) state_centroids \u0026lt;- data.frame(state.center, state.abb, state.name) |\u0026gt; mutate(state = tolower(state.name)) state_mapa_data \u0026lt;- pv2p_2024_states |\u0026gt; left_join(states_map, by = \u0026#34;region\u0026#34;) state_mapa \u0026lt;- state_mapa_data |\u0026gt; ggplot(aes(long, lat, group = group)) + geom_polygon(aes(fill = pv2p_2024_margin), color = \u0026#34;black\u0026#34;) + scale_fill_gradient2(high = \u0026#34;tomato3\u0026#34;, low = \u0026#34;steelblue3\u0026#34;, mid = \u0026#34;white\u0026#34;, name = \u0026#34;Two-Party Win Margin\u0026#34;, breaks = c(-50, -25, 0, 25, 50), limits = c(-50,50)) + labs(title = \u0026#34;2024 Presidential Forecast\u0026#34;, subtitle = \u0026#34;Simplified Electoral Cycle Model\u0026#34;) + my_prettier_theme() + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.line = element_blank()) state_centroids \u0026lt;- state_mapa_data |\u0026gt; left_join(state_centroids, by = \u0026#34;state\u0026#34;) state_mapa \u0026lt;- state_mapa + geom_text_repel(data = state_centroids, aes(x = x, y = y, label = state.abb, group = group), size = 35) # ggsave(\u0026#34;figures/PV2024_simple_forecast_with_labels.png\u0026#34;, state_mapa) # Plot the final map state_mapa ## Warning: Removed 15539 rows containing missing values (`geom_text_repel()`). ####----------------------------------------------------------# #### Extension 1: Add state labels ####----------------------------------------------------------# # Rename ggplot state data region variable to state for ease states_map \u0026lt;- map_data(\u0026#34;state\u0026#34;) |\u0026gt; rename(state = region) # Transform state boundaries into an sf object states_sf \u0026lt;- st_as_sf(states_map, coords = c(\u0026#34;long\u0026#34;, \u0026#34;lat\u0026#34;), crs = 4326, agr = \u0026#34;constant\u0026#34;) # Create a geometry for each state states_sf \u0026lt;- states_sf %\u0026gt;% group_by(state) %\u0026gt;% summarize(geometry = st_combine(geometry)) %\u0026gt;% st_cast(\u0026#34;POLYGON\u0026#34;) |\u0026gt; st_make_valid() # Merge with your election results data pv2p_2024_states \u0026lt;- pv2p_2024_states |\u0026gt; mutate(state = tolower(state)) # Merge state polygons with 2024 vote margin data states_sf \u0026lt;- left_join(states_sf, pv2p_2024_states, by = \u0026#34;state\u0026#34;) # Create an interactive map with leaflet interactive_map \u0026lt;- leaflet(states_sf) |\u0026gt; addTiles() |\u0026gt; addPolygons( fillColor = ~colorBin(palette = c(\u0026#34;steelblue3\u0026#34;, \u0026#34;white\u0026#34;, \u0026#34;tomato3\u0026#34;), domain = states_sf$pv2p_2024_margin, bins = c(-50, -25, 0, 25, 50))(pv2p_2024_margin), fillOpacity = 0.7, color = \u0026#34;black\u0026#34;, weight = 1, highlight = highlightOptions( weight = 3, color = \u0026#34;#666\u0026#34;, fillOpacity = 0.7, bringToFront = TRUE ), label = ~paste(str_to_title(state), \u0026#34; Win Margin: \u0026#34;, pv2p_2024_margin), labelOptions = labelOptions( style = list(\u0026#34;font-weight\u0026#34; = \u0026#34;normal\u0026#34;, padding = \u0026#34;5px 10px\u0026#34;), textsize = \u0026#34;15px\u0026#34;, direction = \u0026#34;auto\u0026#34; ) ) |\u0026gt; addLegend( pal = colorBin(palette = c(\u0026#34;steelblue3\u0026#34;, \u0026#34;white\u0026#34;, \u0026#34;tomato3\u0026#34;), domain = states_sf$pv2p_2024_margin, bins = c(-50, -25, 0, 25, 50)), values = ~pv2p_2024_margin, opacity = 0.7, title = \u0026#34;Two-Party Win Margin (%)\u0026#34;, position = \u0026#34;bottomleft\u0026#34; ) |\u0026gt; addControl( html = \u0026#34;\u0026lt;h3 style=\u0026#39;color: black; text-align: center;\u0026#39;\u0026gt;2024 Presidential Forecast\u0026lt;/h3\u0026gt;\u0026lt;h5\u0026gt;Simplified Electoral Cycle Model\u0026lt;/h5\u0026gt;\u0026#34;, position = \u0026#34;topright\u0026#34;, className = \u0026#34;map-title\u0026#34;) ## Warning in colorBin(palette = c(\u0026quot;steelblue3\u0026quot;, \u0026quot;white\u0026quot;, \u0026quot;tomato3\u0026quot;), domain = ## states_sf$pv2p_2024_margin, : Some values were outside the color scale and will ## be treated as NA interactive_map # Generate projected state winners and merge with electoral college votes to make # summary of electoral college vote distributions. ec \u0026lt;- read_csv(\u0026#34;ec_full.csv\u0026#34;) ## Rows: 936 Columns: 3 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \u0026quot;,\u0026quot; ## chr (1): state ## dbl (2): electors, year ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. pv2p_2024_states_2 \u0026lt;- pv2p_2024_states_2 |\u0026gt; mutate(year = 2024)|\u0026gt; left_join(ec, by = c(\u0026#34;state\u0026#34;, \u0026#34;year\u0026#34;)) projected_electoral_winner \u0026lt;- pv2p_2024_states_2 |\u0026gt; group_by(winner)|\u0026gt; summarize(electoral_votes = sum(electors)) projected_electoral_winner ## # A tibble: 2 × 2 ## winner electoral_votes ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; ## 1 D 276 ## 2 R 262 ## Harris: 276 ## Trump: 262 "}]